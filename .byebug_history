exit
denominations
ways_of_doing_n_cents[amount]
s
exit
result
exit
encoded_string
exit
encoded_string
exit
k
encoded_string
exit
k.join("")
k
exit
k
exit
array
exit
k
s
k
exit
decode_array
exit
decode_array
exit
result
n
result
n
sorted
n
sorted
n
sorted
n
sorted
n
sorted
n
sorted
exit
sorted
n
sorted
n
sorted
n
sorted
exit
sorted
n
sorted
n
sorted
n
sorted
exit
sorted
n
sorted
n
sorted
exit
n
sorted
n
sorted
exit
result
exit
sorted.index(char)
index
n
char
order_word[char]
sorted[3]
sorted["r"]
sorted
repeats
exit
order_word
exit
result
exit
result
exit
result
exit
result
exit
result
exit
sorted
exit
sorted.index("o")
doubles
sorted
exit
doubles
sorted
n
sorted
exit
doubles
sorted
n
sorted
n
sorted
exit
sorted.join("")
sorted
n
sorted
n
sorted
order_word[char]
index
n
char
sorted
n
sorted
n
sorted
n
target_word.count(char) == 1
target.word.count(char) == 1
char
n
sorted
n
char
index
sorted
exit
sorted
n
sorted
n
index
n
index
n
char
n
char
n
char
n
char
n
char
n
char
index
n
char
index
n
char
index
exit
sorted.join("")
sorted.join(", ")
sort.join(", ")
sorted
exit
sorted
exit
char
target_word.count(char)
target_word.count(char) == 1
target_word.count(char
exit
target_word.select { |c| target_word.count(c) > 1 }
n
target_wprd_count.select
target_word
target_word_count
order_word
exit
ordered_word
n
ordered_word
char
exit
exiy
ordered_word(char)
ordered_word
word.count(char) > 1
char
exit
target_word
target_word_count
order_word
exit
target_hash
item
n
sorted
n
sorted
n
sorted
n
sorted
n
index
exit
sorted
exit
sorted
exit
n
sorted
n
index
n
exit
ordered_hash[letter]
item[0]
item[1]
ordered_hash
n
exit
item
index
n
index
n
index
sorted
n
sorted
n
sorted
n
sorted
exit
sorted
n
sorted[index]
sorted
exit
sorted
index
index.is_a_Integer?
index.is_Integer?
sorted[index]
exit
sorted[index]
